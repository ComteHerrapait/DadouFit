name: Flutter CI

on:
  workflow_dispatch: # allows to manually run
  push:
    branches:
    - main
        
jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.extract_app_version.outputs.app_version }}
      apk_name: ${{ steps.extact_apk_name.outputs.apk_name }}
    steps:
      - uses: actions/checkout@v4
      - name: Extract version from pubspec.yaml
        id: extract_app_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "app_version=$version" >> $GITHUB_OUTPUT

      - name: Build APK name
        id: extact_apk_name
        run: echo "apk_name=dadoufit-release-v$APP_VERSION.apk" >> $GITHUB_OUTPUT
        env: 
          APP_VERSION: ${{ steps.extract_app_version.outputs.app_version }}

  analyze:
    needs: init
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup-composite
      
      - name: Check for formatting issues
        run: dart format --set-exit-if-changed .
      
      - name : Run static code analysis
        run: flutter analyze .

  build_apk:
    needs: init
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup-composite

      - name: Build release apk
        run: flutter build apk --release

      - name: Rename release apk
        run: cd build/app/outputs/apk/release && mv app-release.apk ${{ env.APK_NAME }}
        env: 
          APK_NAME: ${{ needs.init.outputs.apk_name }}

      - name: Upload release apk to artifacts
        uses: actions/upload-artifact@v4
        env: 
          APP_VERSION: ${{ needs.init.outputs.app_version }}
          APK_NAME: ${{ needs.init.outputs.apk_name }}
        with:
          name: ${{ env.APK_NAME }}
          path: build/app/outputs/apk/release/${{ env.APK_NAME }}

  build_web:
    needs: init
    runs-on: ubuntu-latest
    permissions: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup-composite

      - name: Build release web
        run: flutter build web --release --base-href='/DadouFit/'

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build/web'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    needs: 
      - init
      - build_apk
      - analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Artifact (Android)
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APK_NAME }}
          path: ./artifacts
        env: 
          APK_NAME: ${{ needs.init.outputs.apk_name }}

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.APP_VERSION }}
          tag_name: v${{ env.APP_VERSION }}
          files: |
            ./artifacts/${{ env.APK_NAME }}
        env: 
          APP_VERSION: ${{ needs.init.outputs.app_version }}
          APK_NAME: ${{ needs.init.outputs.apk_name }}

